Colv = "NA")
dev.off()
pdf('PDF_figure/Heatmap.pdf',
width = 6,
height = 14)
heatmap.2(heatmap_matrix,
main = "Differentially expressed\nRNA in colon epithelium\npadj < 0.05",
density.info = "none",
key = TRUE,
lwid = c(3,7),
lhei = c(1,7),
col=my_palette,
#margins = c(12,2),
symbreaks = TRUE,
trace = "none",
dendrogram = "row",
labRow = FALSE,
ylab = "Genes",
cexCol = 2,
Colv = "NA")
dev.off()
pdf('PDF_figure/Heatmap.pdf',
width = 60,
height = 140)
heatmap.2(heatmap_matrix,
main = "Differentially expressed\nRNA in colon epithelium\npadj < 0.05",
density.info = "none",
key = TRUE,
lwid = c(3,7),
lhei = c(1,7),
col=my_palette,
#margins = c(12,2),
symbreaks = TRUE,
trace = "none",
dendrogram = "row",
labRow = FALSE,
ylab = "Genes",
cexCol = 2,
Colv = "NA")
dev.off()
pdf('PDF_figure/Heatmap.pdf',
width = 6,
height = 14)
heatmap.2(heatmap_matrix,
main = "Differentially expressed\nRNA in colon epithelium\npadj < 0.05",
density.info = "none",
key = TRUE,
lwid = c(3,7),
lhei = c(1,7),
col=my_palette,
margins = c(12,6),
symbreaks = TRUE,
trace = "none",
dendrogram = "row",
labRow = FALSE,
ylab = "Genes",
cexCol = 2,
Colv = "NA")
dev.off()
pdf('PDF_figure/Heatmap.pdf',
width = 6,
height = 14)
heatmap.2(heatmap_matrix,
main = "Differentially expressed\nRNA in colon epithelium\npadj < 0.05",
density.info = "none",
key = TRUE,
lwid = c(3,7),
lhei = c(1,7),
col=my_palette,
margins = c(16,6),
symbreaks = TRUE,
trace = "none",
dendrogram = "row",
labRow = FALSE,
ylab = "Genes",
cexCol = 2,
Colv = "NA")
dev.off()
pdf('PDF_figure/Heatmap.pdf',
width = 6,
height = 14)
par(cex.main=1.1)
heatmap.2(heatmap_matrix,
main = "Differentially expressed\nRNA in colon epithelium\npadj < 0.05",
density.info = "none",
key = TRUE,
lwid = c(3,7),
lhei = c(1,7),
col=my_palette,
margins = c(16,6),
symbreaks = TRUE,
trace = "none",
dendrogram = "row",
labRow = FALSE,
ylab = "Genes",
cexCol = 2,
Colv = "NA")
dev.off()
pdf('PDF_figure/Heatmap.pdf',
width = 6,
height = 14)
par(cex.main=1.1)
heatmap.2(heatmap_matrix,
main = "Differentially expressed\nRNA in colon epithelium\npadj < 0.05",
density.info = "none",
key = TRUE,
lwid = c(3,7),
lhei = c(1,7),
col=my_palette,
margins = c(12,2),
symbreaks = TRUE,
trace = "none",
dendrogram = "row",
labRow = FALSE,
ylab = "Genes",
cexCol = 2,
Colv = "NA")
dev.off()
par("mar")
pdf('PDF_figure/Heatmap.pdf',
width = 6,
height = 14)
par(mar=c(1,1,1,1))
heatmap.2(heatmap_matrix,
main = "Differentially expressed\nRNA in colon epithelium\npadj < 0.05",
density.info = "none",
key = TRUE,
lwid = c(3,7),
lhei = c(1,7),
col=my_palette,
margins = c(12,2),
symbreaks = TRUE,
trace = "none",
dendrogram = "row",
labRow = FALSE,
ylab = "Genes",
cexCol = 2,
Colv = "NA")
dev.off()
png('G12D vs WT colon epithelium RNASeq.png',
width = 600,
height = 1400,
res = 200,
pointsize = 8)
par(cex.main=1.1)
heatmap.2(heatmap_matrix,
main = "Differentially expressed\nRNA in colon epithelium\npadj < 0.05",
density.info = "none",
key = TRUE,
lwid = c(3,7),
lhei = c(1,7),
col=my_palette,
margins = c(12,2),
symbreaks = TRUE,
trace = "none",
dendrogram = "row",
labRow = FALSE,
ylab = "Genes",
cexCol = 2,
Colv = "NA")
dev.off()
pdf('PDF_figure/Heatmap.pdf',
width = 6,
height = 14)
par(cex.main=1.1)
heatmap.2(heatmap_matrix,
main = "Differentially expressed\nRNA in colon epithelium\npadj < 0.05",
density.info = "none",
key = TRUE,
lwid = c(3,7),
lhei = c(1,7),
col=my_palette,
margins = c(10,2),
symbreaks = TRUE,
trace = "none",
dendrogram = "row",
labRow = FALSE,
ylab = "Genes",
cexCol = 2,
Colv = "NA")
dev.off()
pdf('PDF_figure/Heatmap.pdf',
width = 6,
height = 14)
par(cex.main=1.1)
heatmap.2(heatmap_matrix,
main = "Differentially expressed\nRNA in colon epithelium\npadj < 0.05",
density.info = "none",
key = TRUE,
lwid = c(3,7),
lhei = c(1,7),
col=my_palette,
margins = c(8,2),
symbreaks = TRUE,
trace = "none",
dendrogram = "row",
labRow = FALSE,
ylab = "Genes",
cexCol = 2,
Colv = "NA")
dev.off()
pdf('PDF_figure/Heatmap.pdf',
width = 6,
height = 14)
par(cex.main=1.1)
heatmap.2(heatmap_matrix,
main = "Differentially expressed\nRNA in colon epithelium\npadj < 0.05",
density.info = "none",
key = TRUE,
lwid = c(3,7),
lhei = c(1,7),
col=my_palette,
margins = c(8,2),
symbreaks = TRUE,
trace = "none",
dendrogram = "row",
labRow = FALSE,
ylab = "Genes",
cexCol = 2,
Colv = "NA")
dev.off()
knitr::opts_chunk$set(echo = TRUE)
pdf('PDF_figure/Heatmap.pdf',
width = 6,
height = 14)
par(cex.main=1.1)
heatmap.2(heatmap_matrix,
main = "Differentially expressed\nRNA in colon epithelium\npadj < 0.05",
density.info = "none",
key = TRUE,
lwid = c(3,7),
lhei = c(1,7),
col=my_palette,
margins = c(8,2),
symbreaks = TRUE,
trace = "none",
dendrogram = "row",
labRow = FALSE,
ylab = "Genes",
cexCol = 2,
Colv = "NA")
dev.off()
pdf('PDF_figure/Heatmap.pdf',
width = 6,
height = 14)
par(cex.main=1.1)
heatmap.2(heatmap_matrix,
main = "Differentially expressed\nRNA in colon epithelium\npadj < 0.05",
density.info = "none",
key = TRUE,
lwid = c(3,7),
lhei = c(1,7),
col=my_palette,
margins = c(8,2),
symbreaks = TRUE,
trace = "none",
dendrogram = "row",
labRow = FALSE,
ylab = "Genes",
cexCol = 2,
Colv = "NA")
dev.off()
pdf('PDF_figure/Heatmap.pdf',
width = 6,
height = 14)
par(cex.main=1.1)
heatmap.2(heatmap_matrix,
main = "Differentially expressed\nRNA in colon epithelium\npadj < 0.05",
density.info = "none",
key = TRUE,
lwid = c(3,7),
lhei = c(1,7),
col=my_palette,
margins = c(12,2),
symbreaks = TRUE,
trace = "none",
dendrogram = "row",
labRow = FALSE,
ylab = "Genes",
cexCol = 2,
Colv = "NA")
dev.off()
pdf('PDF_figure/Heatmap.pdf',
width = 6,
height = 12)
par(cex.main=1.1)
heatmap.2(heatmap_matrix,
main = "Differentially expressed\nRNA in colon epithelium\npadj < 0.05",
density.info = "none",
key = TRUE,
lwid = c(3,7),
lhei = c(1,7),
col=my_palette,
margins = c(12,2),
symbreaks = TRUE,
trace = "none",
dendrogram = "row",
labRow = FALSE,
ylab = "Genes",
cexCol = 2,
Colv = "NA")
dev.off()
detected_pseudocount <- pseudoCount[keep,]
dif_analysis$KrasG12D_mean <- rowMeans(detected_pseudocount[,5:8])
dif_analysis$KrasWT_mean <- rowMeans(detected_pseudocount[,1:4])
ggplot(dif_analysis, aes(x = KrasWT_mean, y = KrasG12D_mean)) +
xlab("WT_Average(log2)") + ylab("G12D_Average(log2)") +
geom_point(data = dif_analysis, alpha = 0.5, size = 1, color = "grey") +
geom_point(data = subset(dif_analysis, padj < 0.05 & log2FoldChange > 0), alpha = 0.5, size = 1, color = "red") +
geom_point(data = subset(dif_analysis, padj < 0.05 & log2FoldChange < 0), alpha = 0.5, size = 1, color = "blue") +
labs(title = "WT vs G12D Scatter Plot")
pdf('PDF_figure/Scatter_Plot.pdf',
width = 5,
height = 4)
ggplot(dif_analysis, aes(x = KrasWT_mean, y = KrasG12D_mean)) +
xlab("WT_Average(log2)") + ylab("G12D_Average(log2)") +
geom_point(data = dif_analysis, alpha = 0.5, size = 1, color = "grey") +
geom_point(data = subset(dif_analysis, padj < 0.05 & log2FoldChange > 0), alpha = 0.5, size = 1, color = "red") +
geom_point(data = subset(dif_analysis, padj < 0.05 & log2FoldChange < 0), alpha = 0.5, size = 1, color = "blue") +
labs(title = "WT vs G12D Scatter Plot")
dev.off()
pdf('PDF_figure/MA_Plot.pdf',
width = 5,
height = 4)
ggplot(dif_analysis, aes(x = log(baseMean,2), y = log2FoldChange,)) +
xlab("Average Expression") + ylab("LFC") +
geom_point(data = dif_analysis, alpha = 0.5, size = 1, color = "grey") +
geom_point(data = subset(dif_analysis, padj < 0.05 & log2FoldChange > 0), alpha = 0.5, size = 1, color = "red") +
geom_point(data = subset(dif_analysis, padj < 0.05 & log2FoldChange < 0), alpha = 0.5, size = 1, color = "blue") +
labs(title = "WT vs G12D MA Plot")
dev.off()
pdf('PDF_figure/Volcano_Plot.pdf',
width = 5,
height = 4)
ggplot(dif_analysis, aes(x = log2FoldChange, y = -log(padj,10))) +
xlab("LFC") + ylab("-log10(P value)") +
geom_point(data = dif_analysis, alpha = 0.5, size = 1, color = "black") +
geom_point(data = subset(dif_analysis, padj < 0.05 & log2FoldChange > 0), alpha = 0.5, size = 1, color = "red") +
geom_point(data = subset(dif_analysis, padj < 0.05 & log2FoldChange < 0), alpha = 0.5, size = 1, color = "blue") +
labs(title = "WT vs G12D Volcano Plot") +
xlim(-3,3)
dev.off()
pdf('PDF_figure/Volcano_Plot.pdf',
width = 5,
height = 4)
ggplot(dif_analysis, aes(x = log2FoldChange, y = -log(padj,10))) +
xlab("LFC") + ylab("-log10(P value)") +
geom_point(data = dif_analysis, alpha = 0.5, size = 1, color = "black") +
geom_point(data = subset(dif_analysis, padj < 0.05 & log2FoldChange > 0), alpha = 0.5, size = 1, color = "red") +
geom_point(data = subset(dif_analysis, padj < 0.05 & log2FoldChange < 0), alpha = 0.5, size = 1, color = "blue") +
labs(title = "WT vs G12D Volcano Plot") +
xlim(-3,3) + ylim(0,40)
dev.off()
target_gene <- as.character(rownames(sig_dif))
detected_gene <- as.character(rownames(detected_pseudocount))
# Run GO enrichment analysis for biological process
ego_BP <- enrichGO(gene = target_gene,
universe = detected_gene,
keyType = "ENSEMBL",
OrgDb = org.Mm.eg.db,
ont = "BP",
pAdjustMethod = "BH",
pvalueCutoff = 0.05,
readable = TRUE)
# Output results from GO analysis to a table
cluster_summary_BP <- data.frame(ego_BP)
write.csv(cluster_summary_BP, "GO/GO analysis_BP.csv")
# Run GO enrichment analysis for molecular function
ego_MF <- enrichGO(gene = target_gene,
universe = detected_gene,
keyType = "ENSEMBL",
OrgDb = org.Mm.eg.db,
ont = "MF",
pAdjustMethod = "BH",
pvalueCutoff = 0.05,
readable = TRUE)
# Output results from GO analysis to a table
cluster_summary_MF <- data.frame(ego_MF)
write.csv(cluster_summary_MF, "GO/GO analysis_MF.csv")
# Run GO enrichment analysis for cellular component
ego_CC <- enrichGO(gene = target_gene,
universe = detected_gene,
keyType = "ENSEMBL",
OrgDb = org.Mm.eg.db,
ont = "CC",
pAdjustMethod = "BH",
pvalueCutoff = 0.05,
readable = TRUE)
# Output results from GO analysis to a table
cluster_summary_CC <- data.frame(ego_CC)
write.csv(cluster_summary_CC, "GO/GO analysis_CC.csv")
png('GO/GO dotplot_BP.png',
width = 1600,
height = 1600,
res = 100,
pointsize = 8)
dotplot(ego_BP, showCategory=50)
dev.off()
pdf('PDF_figure/GO dotplot_BP.pdf',
width = 26,
height = 16)
dotplot(ego_BP, showCategory=50)
dev.off()
Uniprot_2_Ensembl <- read_csv("/Users/mizuhi/OneDrive - Harvard University/Haigis Lab/Projects/Halo-Ago2/Halo-Ago-KRas/Raw Data/RNA-Seq/Mouse colon epithelium/Analysis/Uniprot_2_Ensembl.csv")
proteomics_quant <- read_csv("/Users/mizuhi/OneDrive - Harvard University/Haigis Lab/Projects/Halo-Ago2/Halo-Ago-KRas/Raw Data/Proteomics data/scraped colon/2015-03_HaigisMouseColon8plex_Prot.csv")
proteomics_diff <- read_csv("/Users/mizuhi/OneDrive - Harvard University/Haigis Lab/Projects/Halo-Ago2/Halo-Ago-KRas/Raw Data/Proteomics data/scraped colon/ceMS_diff.csv")
Uniprot_2_Ensembl <- read_csv("/Users/mizuhi/OneDrive - Harvard University/Haigis Lab/Projects/Halo-Ago2/Halo-Ago-KRas/Raw Data/RNA-Seq/Mouse colon epithelium/Analysis/Uniprot_2_Ensembl.csv")
proteomics_quant <- read_csv("/Users/mizuhi/OneDrive - Harvard University/Haigis Lab/Projects/Halo-Ago2/Halo-Ago-KRas/Raw Data/Proteomics data/scraped colon/2015-03_HaigisMouseColon8plex_Prot.csv")
proteomics_diff <- read_csv("/Users/mizuhi/OneDrive - Harvard University/Haigis Lab/Projects/Halo-Ago2/Halo-Ago-KRas/Raw Data/Proteomics data/scraped colon/ceMS_diff.csv")
# Return the Ensembl IDs for a set of genes
annotations_edb <- AnnotationDbi::select(EnsDb.Mmusculus.v79,
keys = proteomics_quant$`Protein Id`,
columns = c("GENEID", "GENENAME"),
keytype = "UNIPROTID")
# Determine the indices for the non-duplicated genes
non_duplicates_idx <- which(duplicated(annotations_edb$UNIPROTID) == FALSE)
non_duplicates_idx <- which(duplicated(annotations_edb$GENEID) == FALSE)
# Return only the non-duplicated genes using indices
annotations_edb <- annotations_edb[non_duplicates_idx, ]
# Check number of NAs returned
is.na(annotations_edb$GENEID) %>%
which() %>%
length()
# number of matches using EnsDb.Mmusculus.v79
dim(annotations_edb)[1]
# number of matches using BioMart
dim(Uniprot_2_Ensembl)[1]
proteomics_quant <- as_tibble(proteomics_quant)
proteomics_diff <- as_tibble(proteomics_diff)
dif_analysis$GeneID <- rownames(dif_analysis)
dif_analysis_tib <- as_tibble(dif_analysis)
proteomics_quant <- inner_join(proteomics_quant, annotations_edb, by=c("Protein Id"="UNIPROTID"))
proteomics_diff <- inner_join(proteomics_diff, annotations_edb, by=c("Protein Id"="UNIPROTID"))
overlap <- intersect(rownames(detected_raw_count_norm), proteomics_quant$GENEID)
overlap_lfc <- inner_join(dif_analysis_tib[,c(2,9)], proteomics_diff[,c(8,9)], by=c("GeneID"="GENEID"))
colnames(overlap_lfc) <- c('rna_lfc', 'GeneID', 'protein_lfc')
overlap_lfc$rna_lfc <- as.numeric(as.character(overlap_lfc$rna_lfc))
overlap_lfc$protein_lfc <- as.numeric(as.character(overlap_lfc$protein_lfc))
# Plot scatterplot and calculate the Pearson Correlation
ggplot(overlap_lfc, aes(x = rna_lfc, y = protein_lfc)) +
geom_point(data = overlap_lfc, alpha = 0.5, size = 1, color = "black") +
xlab("RNA LFC (KRas/WT)") + ylab("Protein LFC (KRas/WT)") +
labs(title = "Correlation between proteomics and transcriptomics") +
xlim(-3,3) + ylim(-3,3)
# Correlation test
cor.test(overlap_lfc$rna_lfc, overlap_lfc$protein_lfc)
pdf('PDF_figure/cor_RNA_protein.pdf',
width = 6,
height = 4)
ggplot(overlap_lfc, aes(x = rna_lfc, y = protein_lfc)) +
geom_point(data = overlap_lfc, alpha = 0.5, size = 1, color = "black") +
xlab("RNA LFC (KRas/WT)") + ylab("Protein LFC (KRas/WT)") +
labs(title = "Correlation between proteomics and transcriptomics") +
xlim(-3,3) + ylim(-3,3)
dev.off()
pdf('PDF_figure/cor_RNA_protein.pdf',
width = 5,
height = 4)
ggplot(overlap_lfc, aes(x = rna_lfc, y = protein_lfc)) +
geom_point(data = overlap_lfc, alpha = 0.5, size = 1, color = "black") +
xlab("RNA LFC (KRas/WT)") + ylab("Protein LFC (KRas/WT)") +
labs(title = "Correlation between proteomics and transcriptomics") +
xlim(-3,3) + ylim(-3,3)
dev.off()
overlap_p <- inner_join(dif_analysis_tib[,c(6,9)], proteomics_diff[,c(5,6,9)], by=c("GeneID"="GENEID"))
colnames(overlap_p) <- c('rna_p', 'GeneID', 'protein_p', 'protein_q')
overlap_p$rna_p <- as.numeric(as.character(overlap_p$rna_p))
overlap_p$protein_p <- as.numeric(as.character(overlap_p$protein_p))
overlap_p$protein_q <- as.numeric(as.character(overlap_p$protein_q))
rna_de <- subset(overlap_p, overlap_p$rna_p < 0.05)$GeneID
protein_de <- subset(overlap_p, overlap_p$protein_p < 0.05 & overlap_p$protein_q < 0.1)$GeneID
overlap_de <- intersect(rna_de, protein_de)
grid.newpage()
draw.pairwise.venn(length(rna_de),
length(protein_de),
length(overlap_de),
catergory <- c("DE_Transcriptomics",
"DE_Proteomics"),
lty = "blank",
ex.text = FALSE,
fill = c("pink", "lightblue"),
cat.pos = c(200, 135), cat.dist = 0.05, margin = 0.05,
fontfamily = "sans", cat.fontfamily = "sans")
pdf('PDF_figure/overlap_RNA_protein.pdf',
width = 5,
height = 4)
grid.newpage()
draw.pairwise.venn(length(rna_de),
length(protein_de),
length(overlap_de),
catergory <- c("DE_Transcriptomics",
"DE_Proteomics"),
lty = "blank",
ex.text = FALSE,
fill = c("pink", "lightblue"),
cat.pos = c(200, 135), cat.dist = 0.05, margin = 0.05,
fontfamily = "sans", cat.fontfamily = "sans")
dev.off()
pdf('PDF_figure/overlap_RNA_protein.pdf',
width = 5,
height = 4)
draw.pairwise.venn(length(rna_de),
length(protein_de),
length(overlap_de),
catergory <- c("DE_Transcriptomics",
"DE_Proteomics"),
lty = "blank",
ex.text = FALSE,
fill = c("pink", "lightblue"),
cat.pos = c(200, 135), cat.dist = 0.05, margin = 0.05,
fontfamily = "sans", cat.fontfamily = "sans")
dev.off()
